rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Pending users - only authenticated users can read/write their own data
    match /pending_users/{email} {
      allow read, write: if request.auth != null && request.auth.email == email;
    }
    
    // Games - authenticated users can read, only admins can write
    match /games/{gameId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.token.admin == true || 
         resource == null); // Allow creation for now
    }
    
    // Teams - authenticated users can read, only admins can write
    match /teams/{teamId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.token.admin == true || 
         resource == null); // Allow creation for now
    }
    
    // Players - authenticated users can read, only admins can write
    match /players/{playerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.token.admin == true || 
         resource == null); // Allow creation for now
    }
    
    // Reviews - users can read all, write their own
    match /reviews/{reviewId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Lists - users can read public lists, write their own
    match /lists/{listId} {
      allow read: if request.auth != null && 
        (resource.data.isPublic == true || 
         request.auth.uid == resource.data.userId);
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Watchlists - users can only access their own
    match /watchlists/{watchlistId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Polls - authenticated users can read, only admins can write
    match /polls/{pollId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.token.admin == true || 
         resource == null); // Allow creation for now
    }
    
    // Poll votes - users can read all, write their own
    match /pollVotes/{voteId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
  }
}
